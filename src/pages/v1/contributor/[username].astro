---
import { Code } from "astro/components";
import Copy from "../../../components/Copy.astro";
import { contributors } from "../../../util/getContributors";
import Layout from '../../../layouts/Layout.astro';
import CTA from "../../../components/CTA.astro";

export function getStaticPaths() {
  return contributors.map((contributor) => ({
    params: { username: contributor.username },
    props: { contributor },
  }));
}

const { username } = Astro.params;
const { contributor } = Astro.props;
const { achievements, stats } = contributor as typeof contributors[number];

const mdSnippet = `[![@${username} Astro contributions](${Astro.site}v1/contributor/${username}.svg)](${Astro.url.href})`;
const htmlSnippet = `<a href="${Astro.url.href}">\n <img src="${Astro.site}v1/contributor/${username}.svg" alt="@${username} Astro contributions" width="300" height="200">\n</a>`;
---

<Layout title={`@${username} — Astro Achievements`}>
  <div class="prose prose-invert prose-a:text-accent-300 mx-auto">
    <div class="flex items-baseline gap-6 flex-wrap">
      <h1 class="m-0">@{username}</h1>
      <a href={`https://github.com/${username}`}>
        <span class="sr-only">GitHub Profile</span>
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="1.85rem" height="1.85rem" class="fill-neutral-50 opacity-20 hover:opacity-40 translate-y-1">
          <path fill-rule="evenodd" d="M8 0a8 8 0 0 0-2.5 15.6c.4 0 .5-.2.5-.4v-1.5c-2 .4-2.5-.5-2.7-1 0-.1-.5-.9-.8-1-.3-.2-.7-.6 0-.6.6 0 1 .6 1.2.8.7 1.2 1.9 1 2.4.7 0-.5.2-.9.5-1-1.8-.3-3.7-1-3.7-4 0-.9.3-1.6.8-2.2 0-.2-.3-1 .1-2 0 0 .7-.3 2.2.7a7.4 7.4 0 0 1 4 0c1.5-1 2.2-.8 2.2-.8.5 1.1.2 2 .1 2.1.5.6.8 1.3.8 2.2 0 3-1.9 3.7-3.6 4 .3.2.5.7.5 1.4v2.2c0 .2.1.5.5.4A8 8 0 0 0 16 8a8 8 0 0 0-8-8z"/>
        </svg>      
      </a>
    </div>

    <h2>Stats</h2>

    <div class="not-prose">
      <ul class="flex flex-wrap gap-2 md:gap-4">
        {stats.map(({type,count}) => (
          <li class="text-center p-2 bg-neutral-800 rounded-lg min-w-[6rem]">
            <h3 class="uppercase text-sm tracking-wider">{type}</h3>
            <p class="text-2xl font-black">{count}</p>
          </li>
        ))}
      </ul>
    </div>

    <h2>Shareable Badge</h2>

    <div>
      <img src={`/v1/contributor/${username}.svg`} width="300" height="200">
    </div>

    <div class="flex items-baseline justify-between">
      <h3 class="m-0">Markdown</h3>
      <Copy text={mdSnippet} />
    </div>

    <Code code={mdSnippet} lang="md" />

    <div class="flex items-baseline justify-between">
      <h3 class="m-0">HTML</h3>
      <Copy text={htmlSnippet} />
    </div>
    <Code code={htmlSnippet} lang="html" />

    <h2>All Achievements</h2>
    <ol class="not-prose gap-16 list-none p-0 grid sm:grid-cols-2 text-neutral-400">
      {achievements.map((group) => {
        const { title, details, numAchieved } = group.achievements[0];
        const percentage = numAchieved / contributors.length * 100;
        const classBg = ['bg-bronze', 'bg-silver', 'bg-gold'];
        const classText = ['text-bronze', 'text-silver', 'text-gold'];
        const gradientFrom = ['from-bronze', 'from-silver', 'from-gold'][group.class];
        return (
          <li class="space-y-5">
            <div class="space-y-1">
              <h3 class="font-black text-3xl shrink-0">
                <span class:list={["bg-gradient-to-br to-white inline-block w-6 h-6 mr-0.5 rounded-full translate-y-px", gradientFrom]} />
                <span class:list={["bg-gradient-to-br to-white bg-clip-text text-transparent", gradientFrom]}>
                  {title}
                </span>
              </h3>
              <p class="text-xl font-light text-white">{details}</p>
              <p class="text-xs leading-6">
                {percentage < 1 ? '<1' : Math.round(percentage)}% of contributors have this
              </p>
            </div>
            {group.achievements.length > 1 && (
              <div class="space-y-2">
                <h4 class="text-xs uppercase tracking-wide font-semibold">
                  Previously
                </h4>
                <ol class="space-y-2 text-sm">
                  {group.achievements.map((previous, i) => i > 0 && (
                    <li>
                      <div class="flex items-baseline space-x-2">
                        <span class:list={["inline-block w-2 h-2 rounded-full", classBg[previous.class]]} />
                        <h5 class:list={["font-bold", classText[previous.class]]}>
                          {previous.title}
                        </h5>
                        <p class="text-xs">{previous.details}</p>
                      </div>
                    </li>
                  ))}
                </ol>
              </div>
            )}
          </li>
        );
      })}
    </ol>

    <p class="not-prose my-24">
      <CTA href="/contributors/">← Find more Astro contributors</CTA>
    </p>
  </div>
</Layout>
